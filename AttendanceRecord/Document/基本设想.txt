软件名：AttendanceRecord，声纹签到系统
设计者：Lintong Jiang

系统本质：y = f(x)
输入x：语音信号
输出y：说话人
映射f：签到系统

主要模块：
1、核心算法
2、数据库
3、界面交互
4、通信机制

基本设想：基于现有的可运行版本，现在主要梳理需求，整理设计，使得软件更加好用。

短期目标：准备中期审核（3月15日），演示可运行版本！

近期工作：
1、需求分析（初稿）
2、UML建模（用例图，类图，状态图，时序图，活动图）.
3、概要设计
4、代码实现
5、可运行性测试。

核心算法：对识别的正确性不做要求。但是至少能够对每个合法输入都能返回一个合法的输出；对于不合法输入，提示重新输入。

注：关注主干，暂不考虑任何界面美化，以及高级技术。

<预期版本>
集中式版：即所有普通用户需要在某个超级用户（管理员）的监督下使用本软件。
分布式版；需要加入IP检验模块，仅合法IP才能完成签到并且只接受指定工作场所的IP段为合法IP。

暂时只考虑实现集中式版，时间允许的情况下，再自行实现分布式版。

集中式版的优势：有监督，避免多种形式的作弊（管理员协同作案除外），更安全可靠。
应用场景：1.实验室、公司等各种单位的出勤管理；2.辅导员点名（在大学里有现实意义）。

主界面：
标题：AttendanceRecord
“签到”按钮: 
	对已注册的用户执行“签到”功能。
	点击“签到”，开始录音，同时，文本框中显示"signing"，“签到”-->“停止”。
	点击“停止”，完成录音，随即调用核心算法，返回测试结果（弹出对话框，显示结果说话人的基本信息）。
	若测试结果==真实情况，则点击“正确”，完成签到。否则，提示尝试重新签到或者在管理员协助下增量注册。
“注册”按钮：未注册的用户先进行注册。点击“注册”，打开管理员面板。
日志显示文本框：显示系统状态和签到情况。

对主界面进行UML建模
思考系统的数据库管理!

问题1：对于“签到”按钮的响应，有两种方案。
1. 即上述方案，点击按钮，开始录音，按钮名改变。再次点击该按钮，录音结束，而将录音作为输入，调用核心算法返回签到结果。
2. 点击按钮，开始录音。一段时间(5s or 10s)后，录音自动结束（定时器跟踪），按钮名变为“签到（已获取语音）”。再次点击该按钮，调用核心算法返回签到结果。

目前，我们暂且使用第一种方案。

问题2：如何使用数据库存储图片？存图片的位置或者图片名。
暂不考虑在用户信息中包含用户图片。

问题3：打开子对话框之后，隐藏父对话框，并在关闭之后重新显示或者一起关闭？
e.g. 点击“注册”，打开管理员面板登录对话框，此时，需要隐藏主界面对话框。
登录成功之后，打开管理员面板对话框，同样，隐藏登录对话框。然而，关闭管理员面板时，同时也关闭其父对话框。


管理员面板

new #1，专门写一个类CMatFile来读写存取Mat File！
new #2，需要判断录入的语音是否合格。这一点必须与核心算法中的标准一致。

主要分为四个小部分
1. 个人信息录入
2. 录音（+指定录音人id，若none,则默认存入同一个目录下）停止录音后，立刻保存，并返回相应信息。
3. 训练模型（+指定录音人id）时间允许的情况下，加入多个语音一起训练。
4. 测试（+指定录音人id）

new #3：自动发送邮件。使用JMailDemo。

完成中期答辩之后，遵循软件工程的流程，体验每一个过程。特别注意文档的规范性。

类列表

界面类
CMaindlg
CLogindlg
CAdmindlg（包含CTabctrl）
数据库处理类
MatFile(*.mat)
AdoDB(*.accdb/*.mdb)
录音类
SoundRecorder
用户类
User
邮件服务类
eMailService

核心算法模块（matlab-->.dll）








